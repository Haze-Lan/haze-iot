syntax = "proto3";
package grpc;
option go_package="haze-iot/grpc";
option java_multiple_files = true;


service DataCollectService {
  // 数据收集接口
  rpc collectData (DataCollections) returns (ReportReply) {}
  // 状态收集接口
  rpc collectState (StateCollections) returns (ReportReply) {}
  // 指令结果收集接口
  rpc collectCommandState(CommandStateRequest) returns (ReportReply) {}
  // 属性收集接口
  rpc collectAttributes(AttributesCollections) returns (ReportReply) {}
  // 属性收集接口
  rpc collectMetrics(MetricsCollections) returns (ReportReply) {}
}

service CommandDistributionService {
  //监听指令
  rpc commandDistribution(stream CommandRequest) returns (stream CommandResponse){}
}

message DataCollections{
  int32 size = 1;
  repeated DataRequest data = 2;
}

//检测数据
message DataRequest {
  //设备编号
  string number = 1;
  //环境项目
  string variable = 2;
  //环境项目值
  string value = 3;
  //数据发生时间
  int64  date = 4;
}

message StateCollections{
  int32 size = 1;
  repeated StateRequest data = 2;
}

//设备连接状态
message StateRequest{
  //设备编号
  string number = 1;
  //设备状态
  string state = 2;
  //携带的消息
  string message = 3;
  //时间发生时间
  int64 date = 4;
}

//指令执行结果上报
message CommandStateRequest{
  //设备编号
  string number = 1;
  //指令Key
  string commandKey = 2;
  //是否成功
  bool isSuccess = 3;
  //执行结果描述
  string message = 4;
}
message AttributesCollections{
  int32 size = 1;
  repeated AttributesRequest data = 2;
}
//指令执行结果上报
message AttributesRequest{
  //设备编号
  string number = 1;
  //属性键名
  string attributes = 2;
  //旧值
  string oldValue = 3;
  //新值
  string newValue = 4;
  //数据发生时间
  int64 date = 5;
  //中文 名称
  string name = 6;
}
message MetricsCollections{
  int32 size = 1;
  repeated MetricsRequest data = 2;
}

//监测参数上报
message MetricsRequest{
  /**
   * 名称
   */
  string name = 1;
  /**
   * 唯一标识
   */
  string key = 2;
  /**
   * 值
   */
  double value = 3;
  /**
   * 描述
   */
  string description = 4;
  /**
   * 单位
   */
  string unit = 5;
}
//这个没什么用
message CommandRequest{

}


message ReportReply {
  //这个是否ok绝对数据是否从新发送
  bool isOk = 1;
}
message CommandResponse{
  //设备编号
  string number = 1;
  //指令Key
  string  key = 2;
  //指令携带参数
  map<string, string> parameters = 3;

}